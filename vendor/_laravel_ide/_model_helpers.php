<?php

namespace App\Models {

  /**
   * App\Models\AdsSlider
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string $href_link
   * @property string $page_sections
   * @property string|null $horizontal_slider_alt_name
   * @property string|null $horizontal_slider_url
   * @property string|null $vertical_slider_alt_name
   * @property string|null $vertical_slider_url
   * @property int $id
   * @property-read \Illuminate\Database\Eloquent\Collection<int, \Illuminate\Notifications\DatabaseNotification> $notifications
   * @property-read int|null $notifications_count
   * @method static \Illuminate\Database\Eloquent\Builder|AdsSlider whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|AdsSlider whereVerticalSliderUrl($value)
   * @method static \Illuminate\Database\Eloquent\Builder|AdsSlider whereVerticalSliderAltName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|AdsSlider whereHorizontalSliderUrl($value)
   * @method static \Illuminate\Database\Eloquent\Builder|AdsSlider whereHorizontalSliderAltName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|AdsSlider wherePageSections($value)
   * @method static \Illuminate\Database\Eloquent\Builder|AdsSlider whereHrefLink($value)
   * @method static \Illuminate\Database\Eloquent\Builder|AdsSlider whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|AdsSlider whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|AdsSlider newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|AdsSlider newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|AdsSlider query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class AdsSlider extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\Album
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property bigint(20) unsigned $created_by
   * @property string|null $description
   * @property string $title
   * @property int $id
   * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\Photo> $photos
   * @property-read int|null $photos_count
   * @property-read \App\Models\User $user
   * @method static \Illuminate\Database\Eloquent\Builder|Album whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Album whereTitle($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Album whereDescription($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Album whereCreatedBy($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Album whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Album whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Album newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Album newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Album query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class Album extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\Certification
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string $industry
   * @property string|null $page_section
   * @property string $name
   * @property int $id
   * @method static \Illuminate\Database\Eloquent\Builder|Certification whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Certification whereName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Certification wherePageSection($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Certification whereIndustry($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Certification whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Certification whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Certification newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Certification newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Certification query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class Certification extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\ComplaintCommittee
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string $contact_details
   * @property string $committee
   * @property string $address
   * @property string $name
   * @property int $id
   * @method static \Illuminate\Database\Eloquent\Builder|ComplaintCommittee whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|ComplaintCommittee whereName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|ComplaintCommittee whereAddress($value)
   * @method static \Illuminate\Database\Eloquent\Builder|ComplaintCommittee whereCommittee($value)
   * @method static \Illuminate\Database\Eloquent\Builder|ComplaintCommittee whereContactDetails($value)
   * @method static \Illuminate\Database\Eloquent\Builder|ComplaintCommittee whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|ComplaintCommittee whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|ComplaintCommittee newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|ComplaintCommittee newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|ComplaintCommittee query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class ComplaintCommittee extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\Course
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string $course_id
   * @property string $featured_image
   * @property string $description
   * @property string $course_type
   * @property string $created_by
   * @property string $image_url
   * @property string|null $course_url
   * @property string $course_name
   * @property int $id
   * @method static \Illuminate\Database\Eloquent\Builder|Course whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Course whereCourseName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Course whereCourseUrl($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Course whereImageUrl($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Course whereCreatedBy($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Course whereCourseType($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Course whereDescription($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Course whereFeaturedImage($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Course whereCourseId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Course whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Course whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Course newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Course newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Course query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class Course extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\CoursesAndIntakes
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property int(11) $intake
   * @property string $course_type
   * @property string $course_name
   * @property int $id
   * @method static \Illuminate\Database\Eloquent\Builder|CoursesAndIntakes whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|CoursesAndIntakes whereCourseName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|CoursesAndIntakes whereCourseType($value)
   * @method static \Illuminate\Database\Eloquent\Builder|CoursesAndIntakes whereIntake($value)
   * @method static \Illuminate\Database\Eloquent\Builder|CoursesAndIntakes whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|CoursesAndIntakes whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|CoursesAndIntakes newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|CoursesAndIntakes newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|CoursesAndIntakes query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class CoursesAndIntakes extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\Department
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string $name
   * @property int $id
   * @method static \Illuminate\Database\Eloquent\Builder|Department whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Department whereName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Department whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Department whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Department newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Department newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Department query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class Department extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\Equipment
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string $equipment_name
   * @property bigint(20) unsigned $category_id
   * @property int $equipment_id
   * @method static \Illuminate\Database\Eloquent\Builder|Equipment whereEquipmentId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Equipment whereCategoryId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Equipment whereEquipmentName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Equipment whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Equipment whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Equipment newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Equipment newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Equipment query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class Equipment extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\Event
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string $organizer_details
   * @property string $venue
   * @property string $participant_details
   * @property date $date
   * @property string $event_name
   * @property int $id
   * @property-read \Illuminate\Database\Eloquent\Collection<int, \Illuminate\Notifications\DatabaseNotification> $notifications
   * @property-read int|null $notifications_count
   * @method static \Illuminate\Database\Eloquent\Builder|Event whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Event whereEventName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Event whereDate($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Event whereParticipantDetails($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Event whereVenue($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Event whereOrganizerDetails($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Event whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Event whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Event newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Event newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Event query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class Event extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\IndustryAcademicPartnering
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string|null $categories_js
   * @property string $alt_name
   * @property string $logo_image_url
   * @property int $id
   * @method static \Illuminate\Database\Eloquent\Builder|IndustryAcademicPartnering whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|IndustryAcademicPartnering whereLogoImageUrl($value)
   * @method static \Illuminate\Database\Eloquent\Builder|IndustryAcademicPartnering whereAltName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|IndustryAcademicPartnering whereCategoriesJs($value)
   * @method static \Illuminate\Database\Eloquent\Builder|IndustryAcademicPartnering whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|IndustryAcademicPartnering whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|IndustryAcademicPartnering newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|IndustryAcademicPartnering newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|IndustryAcademicPartnering query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class IndustryAcademicPartnering extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\Newsletter
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property bigint(20) unsigned $author_id
   * @property enum('draft','unpublished','published') $publish_status
   * @property bigint(20) unsigned $department_id
   * @property string|null $thumbnail
   * @property string|null $content
   * @property string|null $keywords
   * @property string|null $summary_description
   * @property string $slug
   * @property string $title
   * @property int $id
   * @method static \Illuminate\Database\Eloquent\Builder|Newsletter whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Newsletter whereTitle($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Newsletter whereSlug($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Newsletter whereSummaryDescription($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Newsletter whereKeywords($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Newsletter whereContent($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Newsletter whereThumbnail($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Newsletter whereDepartmentId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Newsletter wherePublishStatus($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Newsletter whereAuthorId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Newsletter whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Newsletter whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Newsletter newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Newsletter newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Newsletter query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class Newsletter extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\NewspaperCutout
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property bigint(20) unsigned $uploaded_by
   * @property string $department
   * @property string $image_path
   * @property date|null $date_of_publish
   * @property string|null $description
   * @property string|null $newspaper_name
   * @property int $id
   * @property-read \App\Models\User $user
   * @method static \Illuminate\Database\Eloquent\Builder|NewspaperCutout whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|NewspaperCutout whereNewspaperName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|NewspaperCutout whereDescription($value)
   * @method static \Illuminate\Database\Eloquent\Builder|NewspaperCutout whereDateOfPublish($value)
   * @method static \Illuminate\Database\Eloquent\Builder|NewspaperCutout whereImagePath($value)
   * @method static \Illuminate\Database\Eloquent\Builder|NewspaperCutout whereDepartment($value)
   * @method static \Illuminate\Database\Eloquent\Builder|NewspaperCutout whereUploadedBy($value)
   * @method static \Illuminate\Database\Eloquent\Builder|NewspaperCutout whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|NewspaperCutout whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|NewspaperCutout newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|NewspaperCutout newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|NewspaperCutout query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class NewspaperCutout extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\NssAndRRC
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string $pdf_url
   * @property string $year
   * @property int $id
   * @method static \Illuminate\Database\Eloquent\Builder|NssAndRRC whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|NssAndRRC whereYear($value)
   * @method static \Illuminate\Database\Eloquent\Builder|NssAndRRC wherePdfUrl($value)
   * @method static \Illuminate\Database\Eloquent\Builder|NssAndRRC whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|NssAndRRC whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|NssAndRRC newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|NssAndRRC newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|NssAndRRC query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class NssAndRRC extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\OtherSessionsInfo
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string|null $latitude_longitude
   * @property string|null $name
   * @property string|null $asn
   * @property string|null $city
   * @property string|null $timezone
   * @property \Illuminate\Support\Carbon $request_timestamp
   * @property string $ip_address
   * @property int $id
   * @method static \Illuminate\Database\Eloquent\Builder|OtherSessionsInfo whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|OtherSessionsInfo whereIpAddress($value)
   * @method static \Illuminate\Database\Eloquent\Builder|OtherSessionsInfo whereRequestTimestamp($value)
   * @method static \Illuminate\Database\Eloquent\Builder|OtherSessionsInfo whereTimezone($value)
   * @method static \Illuminate\Database\Eloquent\Builder|OtherSessionsInfo whereCity($value)
   * @method static \Illuminate\Database\Eloquent\Builder|OtherSessionsInfo whereAsn($value)
   * @method static \Illuminate\Database\Eloquent\Builder|OtherSessionsInfo whereName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|OtherSessionsInfo whereLatitudeLongitude($value)
   * @method static \Illuminate\Database\Eloquent\Builder|OtherSessionsInfo whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|OtherSessionsInfo whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|OtherSessionsInfo newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|OtherSessionsInfo newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|OtherSessionsInfo query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class OtherSessionsInfo extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\Photo
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string|null $credits
   * @property string|null $caption
   * @property string $image_url
   * @property bigint(20) unsigned $album_id
   * @property int $id
   * @property-read \App\Models\Album $album
   * @method static \Illuminate\Database\Eloquent\Builder|Photo whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Photo whereAlbumId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Photo whereImageUrl($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Photo whereCaption($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Photo whereCredits($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Photo whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Photo whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Photo newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Photo newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Photo query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class Photo extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\PlacementStatistic
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property int(11)|null $year_2023_24
   * @property int(11)|null $year_2022_23
   * @property int(11)|null $year_2021_22
   * @property int(11)|null $year_2020_21
   * @property int(11)|null $year_2019_20
   * @property string $department
   * @property int $id
   * @method static \Illuminate\Database\Eloquent\Builder|PlacementStatistic whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PlacementStatistic whereDepartment($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PlacementStatistic whereYear201920($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PlacementStatistic whereYear202021($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PlacementStatistic whereYear202122($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PlacementStatistic whereYear202223($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PlacementStatistic whereYear202324($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PlacementStatistic whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PlacementStatistic whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PlacementStatistic newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|PlacementStatistic newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|PlacementStatistic query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class PlacementStatistic extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\PostSlider
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string|null $alt_name
   * @property string|null $href_link
   * @property string $mobile_image_url
   * @property string $desktop_image_url
   * @property string $page_name
   * @property int $id
   * @property-read \Illuminate\Database\Eloquent\Collection<int, \Illuminate\Notifications\DatabaseNotification> $notifications
   * @property-read int|null $notifications_count
   * @method static \Illuminate\Database\Eloquent\Builder|PostSlider whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PostSlider wherePageName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PostSlider whereDesktopImageUrl($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PostSlider whereMobileImageUrl($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PostSlider whereHrefLink($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PostSlider whereAltName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PostSlider whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PostSlider whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|PostSlider newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|PostSlider newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|PostSlider query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class PostSlider extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\Route
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property int(11) $total_km
   * @property time $starting_time
   * @property string $operated_via
   * @property string $route
   * @property int $id
   * @method static \Illuminate\Database\Eloquent\Builder|Route whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Route whereRoute($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Route whereOperatedVia($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Route whereStartingTime($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Route whereTotalKm($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Route whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Route whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|Route newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Route newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|Route query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class Route extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\SliderImage
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string $alt_tag
   * @property string $image_url
   * @property string $department
   * @property int $id
   * @property-read \Illuminate\Database\Eloquent\Collection<int, \Illuminate\Notifications\DatabaseNotification> $notifications
   * @property-read int|null $notifications_count
   * @method static \Illuminate\Database\Eloquent\Builder|SliderImage whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SliderImage whereDepartment($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SliderImage whereImageUrl($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SliderImage whereAltTag($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SliderImage whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SliderImage whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SliderImage newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|SliderImage newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|SliderImage query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class SliderImage extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\SportAthletesAndAchievements
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string $pdf_url
   * @property string $year
   * @property int $id
   * @method static \Illuminate\Database\Eloquent\Builder|SportAthletesAndAchievements whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SportAthletesAndAchievements whereYear($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SportAthletesAndAchievements wherePdfUrl($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SportAthletesAndAchievements whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SportAthletesAndAchievements whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SportAthletesAndAchievements newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|SportAthletesAndAchievements newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|SportAthletesAndAchievements query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class SportAthletesAndAchievements extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\SportData
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string $achieved
   * @property string $venue
   * @property string $event
   * @property string $year
   * @property int $id
   * @method static \Illuminate\Database\Eloquent\Builder|SportData whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SportData whereYear($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SportData whereEvent($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SportData whereVenue($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SportData whereAchieved($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SportData whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SportData whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|SportData newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|SportData newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|SportData query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class SportData extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\StudentAchievement
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string $department
   * @property string $year
   * @property string|null $prize_won
   * @property string $student_name
   * @property string $register_no
   * @property date $event_date
   * @property string $institution_name
   * @property string $event_name
   * @property int $id
   * @method static \Illuminate\Database\Eloquent\Builder|StudentAchievement whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|StudentAchievement whereEventName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|StudentAchievement whereInstitutionName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|StudentAchievement whereEventDate($value)
   * @method static \Illuminate\Database\Eloquent\Builder|StudentAchievement whereRegisterNo($value)
   * @method static \Illuminate\Database\Eloquent\Builder|StudentAchievement whereStudentName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|StudentAchievement wherePrizeWon($value)
   * @method static \Illuminate\Database\Eloquent\Builder|StudentAchievement whereYear($value)
   * @method static \Illuminate\Database\Eloquent\Builder|StudentAchievement whereDepartment($value)
   * @method static \Illuminate\Database\Eloquent\Builder|StudentAchievement whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|StudentAchievement whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|StudentAchievement newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|StudentAchievement newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|StudentAchievement query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class StudentAchievement extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\TicketConversations
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property time $last_updated
   * @property string|null $cc_recipients
   * @property string $message
   * @property enum('ticket_creator','web_master') $sender_type
   * @property string $ticket_id
   * @property int $id
   * @property-read \App\Models\WebsiteTicketDetails $ticket
   * @method static \Illuminate\Database\Eloquent\Builder|TicketConversations whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|TicketConversations whereTicketId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|TicketConversations whereSenderType($value)
   * @method static \Illuminate\Database\Eloquent\Builder|TicketConversations whereMessage($value)
   * @method static \Illuminate\Database\Eloquent\Builder|TicketConversations whereCcRecipients($value)
   * @method static \Illuminate\Database\Eloquent\Builder|TicketConversations whereLastUpdated($value)
   * @method static \Illuminate\Database\Eloquent\Builder|TicketConversations whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|TicketConversations whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|TicketConversations newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|TicketConversations newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|TicketConversations query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class TicketConversations extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\User
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string|null $remember_token
   * @property int(11) $role
   * @property string $type
   * @property string $password
   * @property \Illuminate\Support\Carbon|null $email_verified_at
   * @property string $email
   * @property string $name
   * @property int $id
   * @property-read \Illuminate\Database\Eloquent\Collection<int, \Illuminate\Notifications\DatabaseNotification> $notifications
   * @property-read int|null $notifications_count
   * @method static \Illuminate\Database\Eloquent\Builder|User whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|User whereName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|User whereEmail($value)
   * @method static \Illuminate\Database\Eloquent\Builder|User whereEmailVerifiedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|User wherePassword($value)
   * @method static \Illuminate\Database\Eloquent\Builder|User whereType($value)
   * @method static \Illuminate\Database\Eloquent\Builder|User whereRole($value)
   * @method static \Illuminate\Database\Eloquent\Builder|User whereRememberToken($value)
   * @method static \Illuminate\Database\Eloquent\Builder|User whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|User whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|User newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|User newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|User query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class User extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\WebsiteTicketDetails
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string|null $appeal_data
   * @property string|null $ticket_work_description
   * @property string $ticket_status
   * @property string $ticket_id
   * @property-read \App\Models\WebsiteUpdateEnquiry $enquiry
   * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\TicketConversations> $conversations
   * @property-read int|null $conversations_count
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteTicketDetails whereTicketId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteTicketDetails whereTicketStatus($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteTicketDetails whereTicketWorkDescription($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteTicketDetails whereAppealData($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteTicketDetails whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteTicketDetails whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteTicketDetails newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteTicketDetails newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteTicketDetails query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class WebsiteTicketDetails extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\WebsiteUpdateEnquiry
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property bool $confirmation
   * @property array|null $google_drive_urls
   * @property string $data_update
   * @property string $work_type
   * @property string $department
   * @property string $staff_phone
   * @property string $staff_email
   * @property string $staff_name
   * @property string $staff_id
   * @property string $ticket_id
   * @property-read \App\Models\WebsiteTicketDetails $ticketDetails
   * @property-read \Illuminate\Database\Eloquent\Collection<int, \Illuminate\Notifications\DatabaseNotification> $notifications
   * @property-read int|null $notifications_count
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteUpdateEnquiry whereTicketId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteUpdateEnquiry whereStaffId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteUpdateEnquiry whereStaffName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteUpdateEnquiry whereStaffEmail($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteUpdateEnquiry whereStaffPhone($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteUpdateEnquiry whereDepartment($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteUpdateEnquiry whereWorkType($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteUpdateEnquiry whereDataUpdate($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteUpdateEnquiry whereGoogleDriveUrls($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteUpdateEnquiry whereConfirmation($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteUpdateEnquiry whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteUpdateEnquiry whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteUpdateEnquiry newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteUpdateEnquiry newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|WebsiteUpdateEnquiry query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class WebsiteUpdateEnquiry extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\WhatsAppMessage
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string $whatsapp_number
   * @property string $name
   * @property int $id
   * @property-read \Illuminate\Database\Eloquent\Collection<int, \Illuminate\Notifications\DatabaseNotification> $notifications
   * @property-read int|null $notifications_count
   * @method static \Illuminate\Database\Eloquent\Builder|WhatsAppMessage whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WhatsAppMessage whereName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WhatsAppMessage whereWhatsappNumber($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WhatsAppMessage whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WhatsAppMessage whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WhatsAppMessage newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|WhatsAppMessage newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|WhatsAppMessage query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class WhatsAppMessage extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

  /**
   * App\Models\WomenEmpowermentCellMember
   *
   * @property \Illuminate\Support\Carbon|null $updated_at
   * @property \Illuminate\Support\Carbon|null $created_at
   * @property string|null $beneficiaries
   * @property date|null $date
   * @property string|null $program_name
   * @property string|null $department
   * @property string $role
   * @property string $name
   * @property int $id
   * @property-read \Illuminate\Database\Eloquent\Collection<int, \Illuminate\Notifications\DatabaseNotification> $notifications
   * @property-read int|null $notifications_count
   * @method static \Illuminate\Database\Eloquent\Builder|WomenEmpowermentCellMember whereId($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WomenEmpowermentCellMember whereName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WomenEmpowermentCellMember whereRole($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WomenEmpowermentCellMember whereDepartment($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WomenEmpowermentCellMember whereProgramName($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WomenEmpowermentCellMember whereDate($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WomenEmpowermentCellMember whereBeneficiaries($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WomenEmpowermentCellMember whereCreatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WomenEmpowermentCellMember whereUpdatedAt($value)
   * @method static \Illuminate\Database\Eloquent\Builder|WomenEmpowermentCellMember newModelQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|WomenEmpowermentCellMember newQuery()
   * @method static \Illuminate\Database\Eloquent\Builder|WomenEmpowermentCellMember query()
   * @method static mixed select($columns)
   * @method static mixed selectSub($query, $as)
   * @method static mixed selectRaw($expression, array $bindings)
   * @method static mixed fromSub($query, $as)
   * @method static mixed fromRaw($expression, $bindings)
   * @method static mixed addSelect($column)
   * @method static mixed distinct()
   * @method static mixed from($table, $as)
   * @method static mixed useIndex($index)
   * @method static mixed forceIndex($index)
   * @method static mixed ignoreIndex($index)
   * @method static mixed join($table, $first, $operator, $second, $type, $where)
   * @method static mixed joinWhere($table, $first, $operator, $second, $type)
   * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
   * @method static mixed joinLateral($query, string $as, string $type)
   * @method static mixed leftJoinLateral($query, string $as)
   * @method static mixed leftJoin($table, $first, $operator, $second)
   * @method static mixed leftJoinWhere($table, $first, $operator, $second)
   * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed rightJoin($table, $first, $operator, $second)
   * @method static mixed rightJoinWhere($table, $first, $operator, $second)
   * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
   * @method static mixed crossJoin($table, $first, $operator, $second)
   * @method static mixed crossJoinSub($query, $as)
   * @method static mixed mergeWheres($wheres, $bindings)
   * @method static mixed where($column, $operator, $value, $boolean)
   * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
   * @method static mixed orWhere($column, $operator, $value)
   * @method static mixed whereNot($column, $operator, $value, $boolean)
   * @method static mixed orWhereNot($column, $operator, $value)
   * @method static mixed whereColumn($first, $operator, $second, $boolean)
   * @method static mixed orWhereColumn($first, $operator, $second)
   * @method static mixed whereRaw($sql, $bindings, $boolean)
   * @method static mixed orWhereRaw($sql, $bindings)
   * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
   * @method static mixed orWhereLike($column, $value, $caseSensitive)
   * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
   * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
   * @method static mixed whereIn($column, $values, $boolean, $not)
   * @method static mixed orWhereIn($column, $values)
   * @method static mixed whereNotIn($column, $values, $boolean)
   * @method static mixed orWhereNotIn($column, $values)
   * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
   * @method static mixed orWhereIntegerInRaw($column, $values)
   * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
   * @method static mixed orWhereIntegerNotInRaw($column, $values)
   * @method static mixed whereNull($columns, $boolean, $not)
   * @method static mixed orWhereNull($column)
   * @method static mixed whereNotNull($columns, $boolean)
   * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
   * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
   * @method static mixed orWhereBetween($column, iterable $values)
   * @method static mixed orWhereBetweenColumns($column, array $values)
   * @method static mixed whereNotBetween($column, iterable $values, $boolean)
   * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
   * @method static mixed orWhereNotBetween($column, iterable $values)
   * @method static mixed orWhereNotBetweenColumns($column, array $values)
   * @method static mixed orWhereNotNull($column)
   * @method static mixed whereDate($column, $operator, $value, $boolean)
   * @method static mixed orWhereDate($column, $operator, $value)
   * @method static mixed whereTime($column, $operator, $value, $boolean)
   * @method static mixed orWhereTime($column, $operator, $value)
   * @method static mixed whereDay($column, $operator, $value, $boolean)
   * @method static mixed orWhereDay($column, $operator, $value)
   * @method static mixed whereMonth($column, $operator, $value, $boolean)
   * @method static mixed orWhereMonth($column, $operator, $value)
   * @method static mixed whereYear($column, $operator, $value, $boolean)
   * @method static mixed orWhereYear($column, $operator, $value)
   * @method static mixed whereNested(Closure $callback, $boolean)
   * @method static mixed forNestedWhere()
   * @method static mixed addNestedWhereQuery($query, $boolean)
   * @method static mixed whereExists($callback, $boolean, $not)
   * @method static mixed orWhereExists($callback, $not)
   * @method static mixed whereNotExists($callback, $boolean)
   * @method static mixed orWhereNotExists($callback)
   * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
   * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
   * @method static mixed orWhereRowValues($columns, $operator, $values)
   * @method static mixed whereJsonContains($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonContains($column, $value)
   * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntContain($column, $value)
   * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
   * @method static mixed orWhereJsonOverlaps($column, $value)
   * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
   * @method static mixed orWhereJsonDoesntOverlap($column, $value)
   * @method static mixed whereJsonContainsKey($column, $boolean, $not)
   * @method static mixed orWhereJsonContainsKey($column)
   * @method static mixed whereJsonDoesntContainKey($column, $boolean)
   * @method static mixed orWhereJsonDoesntContainKey($column)
   * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
   * @method static mixed orWhereJsonLength($column, $operator, $value)
   * @method static mixed dynamicWhere($method, $parameters)
   * @method static mixed whereFullText($columns, $value, array $options, $boolean)
   * @method static mixed orWhereFullText($columns, $value, array $options)
   * @method static mixed whereAll($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAll($columns, $operator, $value)
   * @method static mixed whereAny($columns, $operator, $value, $boolean)
   * @method static mixed orWhereAny($columns, $operator, $value)
   * @method static mixed whereNone($columns, $operator, $value, $boolean)
   * @method static mixed orWhereNone($columns, $operator, $value)
   * @method static mixed groupBy($groups)
   * @method static mixed groupByRaw($sql, array $bindings)
   * @method static mixed having($column, $operator, $value, $boolean)
   * @method static mixed orHaving($column, $operator, $value)
   * @method static mixed havingNested(Closure $callback, $boolean)
   * @method static mixed addNestedHavingQuery($query, $boolean)
   * @method static mixed havingNull($columns, $boolean, $not)
   * @method static mixed orHavingNull($column)
   * @method static mixed havingNotNull($columns, $boolean)
   * @method static mixed orHavingNotNull($column)
   * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
   * @method static mixed havingRaw($sql, array $bindings, $boolean)
   * @method static mixed orHavingRaw($sql, array $bindings)
   * @method static mixed orderBy($column, $direction)
   * @method static mixed orderByDesc($column)
   * @method static mixed latest($column)
   * @method static mixed oldest($column)
   * @method static mixed inRandomOrder($seed)
   * @method static mixed orderByRaw($sql, $bindings)
   * @method static mixed skip($value)
   * @method static mixed offset($value)
   * @method static mixed take($value)
   * @method static mixed limit($value)
   * @method static mixed groupLimit($value, $column)
   * @method static mixed forPage($page, $perPage)
   * @method static mixed forPageBeforeId($perPage, $lastId, $column)
   * @method static mixed forPageAfterId($perPage, $lastId, $column)
   * @method static mixed reorder($column, $direction)
   * @method static mixed union($query, $all)
   * @method static mixed unionAll($query)
   * @method static mixed lock($value)
   * @method static mixed lockForUpdate()
   * @method static mixed sharedLock()
   * @method static mixed beforeQuery(callable $callback)
   * @method static mixed applyBeforeQueryCallbacks()
   * @method static mixed afterQuery(Closure $callback)
   * @method static mixed applyAfterQueryCallbacks($result)
   * @method static mixed toSql()
   * @method static mixed toRawSql()
   * @method static mixed find($id, $columns)
   * @method static mixed findOr($id, $columns, Closure $callback)
   * @method static mixed value($column)
   * @method static mixed rawValue(string $expression, array $bindings)
   * @method static mixed soleValue($column)
   * @method static mixed get($columns)
   * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
   * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
   * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
   * @method static mixed getCountForPagination($columns)
   * @method static mixed cursor()
   * @method static mixed pluck($column, $key)
   * @method static mixed implode($column, $glue)
   * @method static mixed exists()
   * @method static mixed doesntExist()
   * @method static mixed existsOr(Closure $callback)
   * @method static mixed doesntExistOr(Closure $callback)
   * @method static mixed count($columns)
   * @method static mixed min($column)
   * @method static mixed max($column)
   * @method static mixed sum($column)
   * @method static mixed avg($column)
   * @method static mixed average($column)
   * @method static mixed aggregate($function, $columns)
   * @method static mixed numericAggregate($function, $columns)
   * @method static mixed insert(array $values)
   * @method static mixed insertOrIgnore(array $values)
   * @method static mixed insertGetId(array $values, $sequence)
   * @method static mixed insertUsing(array $columns, $query)
   * @method static mixed insertOrIgnoreUsing(array $columns, $query)
   * @method static mixed update(array $values)
   * @method static mixed updateFrom(array $values)
   * @method static mixed updateOrInsert(array $attributes, callable|array $values)
   * @method static mixed upsert(array $values, $uniqueBy, $update)
   * @method static mixed increment($column, $amount, array $extra)
   * @method static mixed incrementEach(array $columns, array $extra)
   * @method static mixed decrement($column, $amount, array $extra)
   * @method static mixed decrementEach(array $columns, array $extra)
   * @method static mixed delete($id)
   * @method static mixed truncate()
   * @method static mixed newQuery()
   * @method static mixed getColumns()
   * @method static mixed raw($value)
   * @method static mixed getBindings()
   * @method static mixed getRawBindings()
   * @method static mixed setBindings(array $bindings, $type)
   * @method static mixed addBinding($value, $type)
   * @method static mixed castBinding($value)
   * @method static mixed mergeBindings(self $query)
   * @method static mixed cleanBindings(array $bindings)
   * @method static mixed getConnection()
   * @method static mixed getProcessor()
   * @method static mixed getGrammar()
   * @method static mixed useWritePdo()
   * @method static mixed clone()
   * @method static mixed cloneWithout(array $properties)
   * @method static mixed cloneWithoutBindings(array $except)
   * @method static mixed dump($args)
   * @method static mixed dumpRawSql()
   * @method static mixed dd()
   * @method static mixed ddRawSql()
   * @method static mixed chunk($count, callable $callback)
   * @method static mixed chunkMap(callable $callback, $count)
   * @method static mixed each(callable $callback, $count)
   * @method static mixed chunkById($count, callable $callback, $column, $alias)
   * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
   * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
   * @method static mixed eachById(callable $callback, $count, $column, $alias)
   * @method static mixed lazy($chunkSize)
   * @method static mixed lazyById($chunkSize, $column, $alias)
   * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
   * @method static mixed first($columns)
   * @method static mixed firstOrFail($columns, $message)
   * @method static mixed sole($columns)
   * @method static mixed tap($callback)
   * @method static mixed when($value, callable $callback, callable $default)
   * @method static mixed unless($value, callable $callback, callable $default)
   * @method static mixed explain()
   * @method static mixed macro($name, $macro)
   * @method static mixed mixin($mixin, $replace)
   * @method static mixed hasMacro($name)
   * @method static mixed flushMacros()
   * @method static mixed macroCall($method, $parameters)
   * @mixin \Illuminate\Database\Query\Builder
   */
  class WomenEmpowermentCellMember extends \Illuminate\Database\Eloquent\Model
  {
    //
  }

}